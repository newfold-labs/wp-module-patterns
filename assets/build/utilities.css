.nfd-relative {
	position: relative !important;
}
.-nfd-bottom-1 {
	bottom: -0.25rem !important;
}
.-nfd-top-1 {
	top: -0.25rem !important;
}
.nfd-top-10 {
	top: 2.5rem !important;
}
.nfd-col-start-1 {
	grid-column-start: 1 !important;
}
.nfd-col-start-4 {
	grid-column-start: 4 !important;
}
.nfd-col-start-5 {
	grid-column-start: 5 !important;
}
.nfd-col-start-6 {
	grid-column-start: 6 !important;
}
.nfd-col-start-7 {
	grid-column-start: 7 !important;
}
.nfd-col-end-10 {
	grid-column-end: 10 !important;
}
.nfd-col-end-13 {
	grid-column-end: 13 !important;
}
.nfd-col-end-7 {
	grid-column-end: 7 !important;
}
.nfd-col-end-8 {
	grid-column-end: 8 !important;
}
.nfd-col-end-9 {
	grid-column-end: 9 !important;
}
.nfd-row-start-1 {
	grid-row-start: 1 !important;
}
.nfd-mb-8:not([style*="margin"]) {
	margin-bottom: 2rem !important;
}
.nfd-mt-8:not([style*="margin"]) {
	margin-top: 2rem !important;
}
.nfd-mt-\[-100px\]:not([style*="margin"]) {
	margin-top: -100px !important;
}
.nfd-grid {
	display: grid !important;
}
.nfd-h-full {
	height: 100% !important;
}
.nfd-w-full {
	width: 100% !important;
}
.nfd-shrink-0 {
	flex-shrink: 0 !important;
}
.nfd-grow {
	flex-grow: 1 !important;
}
.nfd-grid-cols-12 {
	grid-template-columns: repeat(12, minmax(0, 1fr)) !important;
}
.nfd-grid-cols-2 {
	grid-template-columns: repeat(2, minmax(0, 1fr)) !important;
}
.nfd-grid-rows-1 {
	grid-template-rows: repeat(1, minmax(0, 1fr)) !important;
}
.nfd-items-center {
	align-items: center !important;
}
.nfd-overflow-hidden {
	overflow: hidden !important;
}
.nfd-rounded:not([style*="-radius"]) {
	border-radius: 0.25rem !important;
}
.nfd-p-0:not([style*="padding"]) {
	padding: 0px !important;
}
.nfd-p-10:not([style*="padding"]) {
	padding: 2.5rem !important;
}
.nfd-p-2:not([style*="padding"]) {
	padding: 0.5rem !important;
}
.nfd-p-4:not([style*="padding"]) {
	padding: 1rem !important;
}
.nfd-p-8:not([style*="padding"]) {
	padding: 2rem !important;
}
.nfd-px-0:not([style*="padding"]) {
	padding-left: 0px !important;
	padding-right: 0px !important;
}
.nfd-px-4:not([style*="padding"]) {
	padding-left: 1rem !important;
	padding-right: 1rem !important;
}
.nfd-px-8:not([style*="padding"]) {
	padding-left: 2rem !important;
	padding-right: 2rem !important;
}
.nfd-py-0:not([style*="padding"]) {
	padding-top: 0px !important;
	padding-bottom: 0px !important;
}
.nfd-py-4:not([style*="padding"]) {
	padding-top: 1rem !important;
	padding-bottom: 1rem !important;
}
.nfd-py-5:not([style*="padding"]) {
	padding-top: 1.25rem !important;
	padding-bottom: 1.25rem !important;
}
.nfd-text-left {
	text-align: left !important;
}
/* Refactored */
/**
* NFD Container (.nfd-container)
*
* This is meant to be used on top-level group block and it
* controlls the width of the content inside it and sets some default
* styling for our patterns (removes margins, sets font size...).
* 
* Requires "Inner blocks use content width" to be enabled on the group.
*
* The default width values can be overriden with:
*   1. The "content" and "wide" options in the block settings.
*   2. By inheriting "width" and "wide width" from the active theme.
*
* We are keeping the specificity of the selectors low so that it can be
* easily overriden by the theme or Gutenberg options.
*/
:where(:root) {

	/*
    * Default and wide container width. 
    * This is used if the width is not inherited from the theme.
    */
	--wndb--container: 1200px;
	--wndb--container--wide: 1340px;
}
/* ----------------------------- Container width ---------------------------- */
body .is-layout-constrained:has(.nfd-container.is-layout-constrained) > .nfd-container.is-layout-constrained {
	width: 100% !important;
	max-width: unset !important;
}
.nfd-container:is(.is-layout-constrained) > :where(:not(.alignleft):not(.alignright):not(.alignfull):not(.alignwide)),
.editor-styles-wrapper .nfd-container:is(.is-layout-constrained) > :where(:not(.alignleft):not(.alignright):not(.alignfull):not(.alignwide)) {
	width: 100%;
	max-width: var(--wndb--container);
}
/* ------------------------------- Wide width ------------------------------- */
.nfd-container:is(.is-layout-constrained) > .alignwide,
.editor-styles-wrapper .nfd-container:is(.is-layout-constrained) > .alignwide {
	width: 100%;
	max-width: var(--wndb--container--wide);
}
/* ----------------------------- Inline padding ----------------------------- */
.nfd-container:not(.alignfull) {
	padding-inline: var(--wndb--p) !important;
}
/**
* Spacing
*
* These classes are used to add paddings, margins and gaps to blocks.
* They can be scaled up to 4 levels: base, md, lg, xl.
* Additionaly, scaling-factor can be defined.
*
* postcss plugin will add necessary :not([style*="padding"]) to selectors.
*/
/**
* Padding specific utilities
*/
:where(:root) {
	/**
    * Default spacing scale factor
    */
	--wndb--padding-factor: 1 !important;

	/*
    * Default padding base
    */
	--wndb--p: 2.375rem !important;

	/**
    * sm
    */
	--wndb--p--sm: 1.5rem !important;

	/**
    * md
    */
	--wndb--p--md: 2rem !important;
}
/* ---------------------------------- Small --------------------------------- */
.nfd-p-sm:not([style*="padding"]) {
	padding: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) !important;
}
.nfd-px-sm:not([style*="padding"]) {
	padding-inline: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) !important;
}
.nfd-py-sm:not([style*="padding"]) {
	padding-block: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) !important;
}
.nfd-pt-sm:not([style*="padding"]) {
	padding-block: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) !important;
}
.nfd-pb-sm:not([style*="padding"]) {
	padding-block: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) !important;
}
.nfd-pl-sm:not([style*="padding"]) {
	padding-left: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) !important;
}
/* --------------------------------- Medium --------------------------------- */
.nfd-p-md:not([style*="padding"]) {
	padding: calc(var(--wndb--p--md) * var(--wndb--padding-factor)) !important;
}
.nfd-px-md:not([style*="padding"]) {
	padding-inline: calc(var(--wndb--p--md) * var(--wndb--padding-factor)) !important;
}
.nfd-py-md:not([style*="padding"]) {
	padding-block: calc(var(--wndb--p--md) * var(--wndb--padding-factor)) !important;
}
.nfd-pt-md:not([style*="padding"]) {
	padding-block: calc(var(--wndb--p--md) * var(--wndb--padding-factor)) !important;
}
.nfd-pb-md:not([style*="padding"]) {
	padding-block: calc(var(--wndb--p--md) * var(--wndb--padding-factor)) !important;
}
.nfd-p-card-md:not([style*="padding"]) {
	padding: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) calc(var(--wndb--p--md) * var(--wndb--padding-factor)) !important;
}
/* --------------------------------- Offset --------------------------------- */
.nfd-pl-offset-md:not([style*="padding"]) {
	padding-left: calc(var(--wndb--p--md) * var(--wndb--padding-factor) - 3px) !important;
	margin-left: calc(var(--wndb--p--md) * var(--wndb--padding-factor) * -1) !important;
}
/* Horizontally overlap children. */
.nfd-overlap-x,
.editor-styles-wrapper .nfd-overlap-x {
	gap: 0;
}
.nfd-overlap-x > *:not(:first-child) {
	margin-inline-start: -1rem !important;
}
:where(:root) {
	/**
    * Default gap scale factor
    */
	--wndb--gap--scale-factor: 1 !important;

	/**
    * Scale
    */
	--wndb--gap--xs: 0.25rem !important;
	--wndb--gap--sm: 0.5rem !important;
	--wndb--gap--md: 1rem !important;
	--wndb--gap--lg: 1.5rem !important;
	--wndb--gap--xl: 2rem !important;
	--wndb--gap--2xl: 2.5rem !important;
}
/* No Gap */
.nfd-gap-0,
.editor-styles-wrapper .nfd-gap-0 {
	gap: 0;
}
/* Extra Small */
.nfd-gap-xs,
.editor-styles-wrapper .nfd-gap-xs {
	gap: calc(var(--wndb--gap--xs) * var(--wndb--gap--scale-factor));
}
/* Small */
.nfd-gap-sm,
.editor-styles-wrapper .nfd-gap-sm {
	gap: calc(var(--wndb--gap--sm) * var(--wndb--gap--scale-factor));
}
/* Medium */
.nfd-gap-md,
.editor-styles-wrapper .nfd-gap-md {
	gap: calc(var(--wndb--gap--md) * var(--wndb--gap--scale-factor));
}
/* Large */
.nfd-gap-lg,
.editor-styles-wrapper .nfd-gap-lg {
	gap: calc(var(--wndb--gap--lg) * var(--wndb--gap--scale-factor));
}
/* Extra Large */
.nfd-gap-xl,
.editor-styles-wrapper .nfd-gap-xl {
	gap: calc(var(--wndb--gap--xl) * var(--wndb--gap--scale-factor));
}
/* 2 Extra Large */
.nfd-gap-2xl,
.editor-styles-wrapper .nfd-gap-2xl {
	gap: calc(var(--wndb--gap--2xl) * var(--wndb--gap--scale-factor));
}
.nfd-gap-y-2xl,
.editor-styles-wrapper .nfd-gap-y-2xl {
	row-gap: calc(var(--wndb--gap--2xl) * var(--wndb--gap--scale-factor));
}
/**
* Border
*
* Border related utilities (radius)
* postcss plugin will add necessary :not([style*="-radius"]) to selectors.
*/
/**
* Border radius specific utilities
*/
:where(:root) {
	/**
    * Default border radius scale factor
    */
	--wndb--rounded--scale-factor: 1 !important;

	/**
    * Border radius scale
    */
	--wndb--border--radius--sm: 0.25rem !important;
	--wndb--border--radius--md: 0.5rem !important;
	--wndb--border--radius--lg: 0.75rem !important;
	--wndb--border--radius--xl: 1rem !important;
}
.nfd-rounded-none:not([style*="-radius"]) {
	border-radius: 0 !important;
}
.nfd-rounded-sm:not([style*="-radius"]) {
	border-radius: calc(var(--wndb--border--radius--sm) * var(--wndb--rounded--scale-factor)) !important;
}
.nfd-rounded:not([style*="-radius"]) {
	border-radius: calc(var(--wndb--border--radius--md) * var(--wndb--rounded--scale-factor)) !important;
}
.nfd-rounded-lg:not([style*="-radius"]) {
	border-radius: calc(var(--wndb--border--radius--lg) * var(--wndb--rounded--scale-factor)) !important;
}
.nfd-rounded-xl:not([style*="-radius"]) {
	border-radius: calc(var(--wndb--border--radius--xl) * var(--wndb--rounded--scale-factor)) !important;
}
.nfd-rounded-full:not([style*="-radius"]) {
	border-radius: calc(9999px * var(--wndb--rounded--scale-factor)) !important;
}
/**
* Typography related utilities
*/
:where(:root) {
	--wndb--max-w--prose: 65ch !important;
}
.nfd-max-w-prose {
	max-width: var(--wndb--max-w--prose) !important;
}
:where(.nfd-text-balance) {
	text-wrap: balance !important;
	max-width: var(--wndb--max-w--prose) !important;
}
.nfd-text-balance > p {
	text-wrap: balance !important;
}
.nfd-text-pretty {
	text-wrap: pretty !important;
}
.nfd-text-pretty > p {
	text-wrap: pretty !important;
}
:where(:root) {
	/**
    * Default text scale factor
    */
	--wndb--text-scale-factor: 1 !important;

	/* Scale */
	--wndb--text--sm: 0.875rem !important;
	--wndb--text--base: 1rem !important;
	--wndb--text--md: 1.125rem !important;
	--wndb--text--lg: 1.5rem !important;
	--wndb--text--huge: clamp(2.25rem, 1.4688rem + 2.5vw, 3.5rem) !important;
}
/* Small */
.nfd-text-sm:not([class*='font-size']):not([style*='font-size']) {
	font-size: calc(var(--wndb--text--sm) * var(--wndb--text-scale-factor)) !important;
}
/* Base */
.nfd-text-base:not([class*='font-size']):not([style*='font-size']) {
	font-size: calc(var(--wndb--text--base) * var(--wndb--text-scale-factor)) !important;
}
/* Medium */
.nfd-text-md:not([class*='font-size']):not([style*='font-size']) {
	font-size: calc(var(--wndb--text--md) * var(--wndb--text-scale-factor)) !important;
}
.nfd-text-md:not([style*='line-height']) {
	line-height: 1.55 !important;
}
/* Large */
.nfd-text-lg:not([class*='font-size']):not([style*='font-size']) {
	font-size: calc(var(--wndb--text--lg) * var(--wndb--text-scale-factor)) !important;
}
.nfd-text-lg:not([style*='line-height']) {
	line-height: 1.4 !important;
}
.nfd-text-lg:not([style*='letter-spacing']) {
	letter-spacing: -0.025em !important;
}
.nfd-text-lg:not([style*='font-weight']) {
	font-weight: 500 !important;
}
/* Huge */
:where(.nfd-text-huge:not([class*='font-size']):not([style*='font-size'])) {
	font-size: calc(var(--wndb--text--huge) * var(--wndb--text-scale-factor)) !important;
	text-wrap: balance !important;
	max-width: var(--wndb--max-w--prose) !important;
}
.nfd-text-huge:not([style*='line-height']) {
	line-height: 1.16667 !important;
}
.nfd-text-huge:not([style*='letter-spacing']) {
	letter-spacing: -0.045em !important;
}
.nfd-text-huge:not([style*='font-weight']) {
	font-weight: 500 !important;
}
/**
* Colors
*
* These utility classes are meant to provide a consistent 
* basic color palette that can be overwritten with different themes.
*/
:where(:root) {
	--wndb--color--surface: hsla(240, 7%, 95%, 1) !important;
	--wndb--color--surface--contrast: hsla(240, 7%, 18%, 1) !important;
	--wndb--color--surface--dark: hsla(240, 7%, 15%, 1) !important;
	--wndb--color--surface--dark-contrast: hsla(0, 0%, 100%, 1) !important;

	--wndb--color--primary: hsla(240, 100%, 50%, 1) !important;
}
/* Surface */
.nfd-bg-surface:not(.has-background),
.nfd-bg-gray-100:not(.has-background) {
	background-color: var(--wndb--color--surface) !important;
}
.nfd-bg-surface:not(.has-text-color),
.nfd-bg-gray-100:not(.has-text-color) {
	color: var(--wndb--color--surface--foreground) !important;
}
/* Surface Dark */
.nfd-bg-surface-dark:not(.has-background),
.nfd-bg-gray-800:not(.has-background) {
	background-color: var(--wndb--color--surface--dark) !important;
}
.nfd-bg-surface-dark:not(.has-text-color),
.nfd-bg-gray-800:not(.has-text-color) {
	color: var(--wndb--color--surface--dark-contrast) !important;
}
.nfd-border-surface-dark
	[style*='-width:']:not(.has-border-color):not([style*='border-left-color']):not([style*='border-right-color']):not([style*='border-top-color']):not(
		[style*='border-bottom-color']
	) {
	border-color: var(--wndb--color--surface--dark) !important;
}
/* Primary */
.nfd-bg-primary:not(.has-background),
.nfd-bg-accent:not(.has-background) {
	background-color: var(--wndb--color--primary) !important;
}
.nfd-bg-primary:not(.has-text-color),
.nfd-bg-accent:not(.has-text-color) {
	color: var(--wndb--color--surface--dark-contrast) !important;
}
.nfd-text-primary:not(.has-text-color),
.wp-block-button.wndb-text-primary > a:not(.has-text-color) {
	color: var(--wndb--color--primary) !important;
}
/* Faded text */
.nfd-text-faded p:not(.has-text-color):not(.has-link-color):not(.has-background),
p.nfd-text-faded:not(.has-text-color):not(.has-link-color):not(.has-background),
.nfd-text-faded time:not(.has-text-color):not(.has-background) {
	opacity: 0.75 !important;
}
/**
* Shadows
*
* box-shadow related utilities.
*/
:where(:root) {
	--wndb--shadow--xs: 0 1px 2px 0 rgba(18, 18, 23, 0.065) !important;
	--wndb--shadow--sm: 0 1px 3px 0 rgba(18, 18, 23, 0.1), 0 1px 2px 0 rgba(18, 18, 23, 0.06) !important;
}
.nfd-shadow-xs:not([style*='box-shadow']) {
	box-shadow: var(--wndb--shadow--xs) !important;
}
.nfd-shadow-sm:not([style*='box-shadow']) {
	box-shadow: var(--wndb--shadow--sm) !important;
}
/* Not-refactored yet */
/* @import 'parts/defaults';
@import 'parts/animations';
@import 'parts/block-preview';
@import 'parts/colors';
@import 'parts/form';
@import 'parts/misc';
@import 'parts/blog';
@import 'parts/separator';
@import 'parts/spacing';
@import 'parts/typography'; */
@media (max-width: 782px) {
	.md\:nfd-order-2 {
		order: 2 !important;
	}
	.md\:nfd-my-0:not([style*="margin"]) {
		margin-top: 0px !important;
		margin-bottom: 0px !important;
	}
	.md\:nfd-flex {
		display: flex !important;
	}
	.md\:nfd-hidden {
		display: none !important;
	}
	.md\:nfd-basis-full {
		flex-basis: 100% !important;
	}
	.md\:nfd-grid-cols-1 {
		grid-template-columns: repeat(1, minmax(0, 1fr)) !important;
	}
	.md\:nfd-flex-wrap {
		flex-wrap: wrap !important;
	}
	.md\:nfd-items-start {
		align-items: flex-start !important;
	}
	.md\:nfd-justify-start {
		justify-content: flex-start !important;
	}
	.md\:nfd-justify-end {
		justify-content: flex-end !important;
	}
	.md\:nfd-justify-center {
		justify-content: center !important;
	}
	.md\:nfd-gap-5 {
		gap: 1.25rem !important;
	}
	.md\:nfd-gap-8 {
		gap: 2rem !important;
	}
	.md\:nfd-self-start {
		align-self: flex-start !important;
	}
	.md\:nfd-rounded-lg:not([style*="-radius"]) {
		border-radius: 0.5rem !important;
	}
	.md\:nfd-border-none {
		border-style: none !important;
	}
	.md\:nfd-p-0:not([style*="padding"]) {
		padding: 0px !important;
	}
	.md\:nfd-px-0:not([style*="padding"]) {
		padding-left: 0px !important;
		padding-right: 0px !important;
	}
	.md\:nfd-py-0:not([style*="padding"]) {
		padding-top: 0px !important;
		padding-bottom: 0px !important;
	}
	.md\:nfd-text-left {
		text-align: left !important;
	}
	.md\:nfd-text-center {
		text-align: center !important;
	}
}
