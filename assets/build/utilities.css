.nfd-relative {
	position: relative !important;
}
.-nfd-bottom-1 {
	bottom: -0.25rem !important;
}
.-nfd-top-0 {
	top: -0px !important;
}
.-nfd-top-0\.5 {
	top: -0.125rem !important;
}
.-nfd-top-1 {
	top: -0.25rem !important;
}
.nfd-top-10 {
	top: 2.5rem !important;
}
.nfd-col-start-1 {
	grid-column-start: 1 !important;
}
.nfd-col-start-4 {
	grid-column-start: 4 !important;
}
.nfd-col-start-5 {
	grid-column-start: 5 !important;
}
.nfd-col-start-6 {
	grid-column-start: 6 !important;
}
.nfd-col-start-7 {
	grid-column-start: 7 !important;
}
.nfd-col-end-10 {
	grid-column-end: 10 !important;
}
.nfd-col-end-13 {
	grid-column-end: 13 !important;
}
.nfd-col-end-7 {
	grid-column-end: 7 !important;
}
.nfd-col-end-8 {
	grid-column-end: 8 !important;
}
.nfd-col-end-9 {
	grid-column-end: 9 !important;
}
.nfd-row-start-1 {
	grid-row-start: 1 !important;
}
.nfd-mb-8:not([style*="margin"]) {
	margin-bottom: 2rem !important;
}
.nfd-mt-8:not([style*="margin"]) {
	margin-top: 2rem !important;
}
.nfd-mt-\[-100px\]:not([style*="margin"]) {
	margin-top: -100px !important;
}
.nfd-grid {
	display: grid !important;
}
.nfd-h-full {
	height: 100% !important;
}
.nfd-w-full {
	width: 100% !important;
}
.nfd-shrink-0 {
	flex-shrink: 0 !important;
}
.nfd-grow {
	flex-grow: 1 !important;
}
.nfd-grid-cols-12 {
	grid-template-columns: repeat(12, minmax(0, 1fr)) !important;
}
.nfd-grid-cols-2 {
	grid-template-columns: repeat(2, minmax(0, 1fr)) !important;
}
.nfd-grid-rows-1 {
	grid-template-rows: repeat(1, minmax(0, 1fr)) !important;
}
.nfd-items-center {
	align-items: center !important;
}
.nfd-overflow-hidden {
	overflow: hidden !important;
}
.nfd-rounded:not([style*="-radius"]) {
	border-radius: 0.25rem !important;
}
.nfd-p-0:not([style*="padding"]) {
	padding: 0px !important;
}
.nfd-p-10:not([style*="padding"]) {
	padding: 2.5rem !important;
}
.nfd-p-2:not([style*="padding"]) {
	padding: 0.5rem !important;
}
.nfd-p-4:not([style*="padding"]) {
	padding: 1rem !important;
}
.nfd-p-8:not([style*="padding"]) {
	padding: 2rem !important;
}
.nfd-px-0:not([style*="padding"]) {
	padding-left: 0px !important;
	padding-right: 0px !important;
}
.nfd-px-4:not([style*="padding"]) {
	padding-left: 1rem !important;
	padding-right: 1rem !important;
}
.nfd-px-8:not([style*="padding"]) {
	padding-left: 2rem !important;
	padding-right: 2rem !important;
}
.nfd-py-0:not([style*="padding"]) {
	padding-top: 0px !important;
	padding-bottom: 0px !important;
}
.nfd-py-4:not([style*="padding"]) {
	padding-top: 1rem !important;
	padding-bottom: 1rem !important;
}
.nfd-py-5:not([style*="padding"]) {
	padding-top: 1.25rem !important;
	padding-bottom: 1.25rem !important;
}
.nfd-pt-0:not([style*="padding"]) {
	padding-top: 0px !important;
}
.nfd-text-left {
	text-align: left !important;
}
/* Refactored */
/**
* Colors
*
* These utility classes are meant to provide a consistent 
* color palette and themable colors that can be overwritten with themes.
*
* The default color theme is `light`.
*/
:where(:root) {
	/* ------------------------------ Color palette ----------------------------- */
	/* Gray */
	--wndb-gray: #6c6c89 !important;
	--wndb-gray-50: #f7f7f8 !important;
	--wndb-gray-100: #ebebef !important;
	--wndb-gray-200: #d1d1db !important;
	--wndb-gray-300: #a9a9bc !important;
	--wndb-gray-400: #8a8aa3 !important;
	--wndb-gray-500: #6c6c89 !important;
	--wndb-gray-600: #55556d !important;
	--wndb-gray-700: #3f3f50 !important;
	--wndb-gray-800: #1d1d22 !important;
	--wndb-gray-900: #121217 !important;

	/* White */
	--wndb-white: #fff !important;
	--wndb-white-50: rgba(255, 255, 255, 0.05) !important;
	--wndb-white-100: rgba(255, 255, 255, 0.1) !important;
	--wndb-white-200: rgba(255, 255, 255, 0.2) !important;
	--wndb-white-300: rgba(255, 255, 255, 0.3) !important;
	--wndb-white-400: rgba(255, 255, 255, 0.4) !important;
	--wndb-white-500: rgba(255, 255, 255, 0.5) !important;
	--wndb-white-600: rgba(255, 255, 255, 0.6) !important;
	--wndb-white-700: rgba(255, 255, 255, 0.7) !important;
	--wndb-white-800: rgba(255, 255, 255, 0.8) !important;
	--wndb-white-900: rgba(255, 255, 255, 0.9) !important;

	/* ----------------------------- Themable ---------------------------- */
	--wndb--color--primary: hsla(240, 100%, 50%, 1) !important;
	--wndb--color--surface: var(--wndb-gray-50) !important;
	--wndb--color--text: var(--wndb-gray-700) !important;
	--wndb--color--text--contrast: var(--wndb-gray-900) !important;
	--wndb--color--text--faded: var(--wndb-gray-600) !important;
	--wndb--color--borders: var(--wndb-gray-100) !important;
	--wndbg--color--links: var(--wndb--color--primary) !important;
}
/*
 * Themes.
 *
 * These classes are meant to be added to the element that needs a different theme.
 *  - By default, the `light` theme is applied. 
 *  - Nested themes are supported.
 */
.nfd-theme-white {
	--wndb--color--borders: var(--wndb-gray-100) !important;
	--wndb--color--surface: var(--wndb-white) !important;
	--wndb--color--text: var(--wndb-gray-700) !important;
}
.nfd-theme-light {
	--wndb--color--borders: var(--wndb-gray-100) !important;
	--wndb--color--surface: var(--wndb-gray-50) !important;
	--wndb--color--text: var(--wndb-gray-700) !important;
}
.nfd-theme-dark {
	--wndb--color--borders: var(--wndb-white-100) !important;
	--wndb--color--surface: var(--wndb-gray-800) !important;
	--wndb--color--text--contrast: var(--wndb-white) !important;
	--wndb--color--text--faded: var(--wndb-white-700) !important;
	--wndb--color--text: var(--wndb-white) !important;
	--wndb--shadow--sm: none !important;
	--wndb--shadow--xs: none !important;
	--wndb-mask-color: rgba(255, 255, 255, 0.12) !important;
}
.nfd-theme-darker {
	--wndb--color--borders: var(--wndb-white-100) !important;
	--wndb--color--surface: var(--wndb-gray-900) !important;
	--wndb--color--text--contrast: var(--wndb-white) !important;
	--wndb--color--text--faded: var(--wndb-white-700) !important;
	--wndb--color--text: var(--wndb-white) !important;
	--wndb--shadow--sm: none !important;
	--wndb--shadow--xs: none !important;
	--wndb-mask-color: rgba(255, 255, 255, 0.12) !important;
}
.nfd-theme-primary {
	--wndb--color--borders: var(--wndb-white-100) !important;
	--wndb--color--surface: var(--wndb--color--primary) !important;
	--wndb--color--text--contrast: var(--wndb-white) !important;
	--wndb--color--text--faded: var(--wndb-white-700) !important;
	--wndb--color--text: var(--wndb-white) !important;
	--wndb--shadow--sm: none !important;
	--wndb--shadow--xs: none !important;
	--wndb-mask-color: rgba(255, 255, 255, 0.12) !important;
}
/* --------------------------------- Surface -------------------------------- */
/* Background */
.nfd-bg-surface:not(.has-background) {
	background-color: var(--wndb--color--surface) !important;
}
/* Text color */
.nfd-bg-surface:not(.has-text-color) {
	color: var(--wndb--color--text) !important;
}
/* Faded text color */
.nfd-text-faded p:not(.has-text-color):not(.has-link-color):not(.has-background),
p.nfd-text-faded:not(.has-text-color):not(.has-link-color):not(.has-background),
.nfd-text-faded time:not(.has-text-color):not(.has-background) {
	color: var(--wndb--color--text--faded) !important;
}
/* Contrast text color */
.nfd-text-contrast:where(:not(.has-text-color)),
.nfd-text-contrast:where(:not(.has-text-color)) a:where(:not(:hover)),
.editor-styles-wrapper div .nfd-text-contrast:where(:not(.has-text-color)),
.editor-styles-wrapper div :where(.nfd-text-contrast:not(.has-text-color):not(.wp-element-button)) a:where(:not(:hover)) {
	color: var(--wndb--color--text--contrast);
}
/* Border color */
/* prettier-ignore */
.nfd-bg-surface:not(.has-border-color),
.nfd-bg-surface [style*='border']:not([class*="border-color"]):not([style*="border-top-color"]):not([style*="border-right-color"]):not([style*="border-bottom-color"]):not([style*="border-left-color"]),
.nfd-bg-surface [style*='border']:not([class*="border-color"]):not([style*="border-top-color"]):not([style*="border-right-color"]):not([style*="border-bottom-color"]):not([style*="border-left-color"]) > img:not(.has-border-color):not([class*="border-color"]):not([style*="border-top-color"]):not([style*="border-right-color"]):not([style*="border-bottom-color"]):not([style*="border-left-color"]),
.nfd-bg-surface [style*='border']:not([class*="border-color"]):not([style*="border-top-color"]):not([style*="border-right-color"]):not([style*="border-bottom-color"]):not([style*="border-left-color"]) > img:not(.has-border-color):not([class*="border-color"]):not([style*="border-top-color"]):not([style*="border-right-color"]):not([style*="border-bottom-color"]):not([style*="border-left-color"]) > .components-resizable-box__container > img:not([class*="border-color"]):not([style*="border-top-color"]):not([style*="border-right-color"]):not([style*="border-bottom-color"]):not([style*="border-left-color"]) {
	border-color: var(--wndb--color--borders) !important;
}
/* Border background */
.nfd-border-bg {
	--wndb--color--borders: var(--wndb--color--surface) !important;
}
/* Border primary */
.nfd-border-primary {
	--wndb--color--borders: var(--wndb--color--primary) !important;
}
/* ---------------------------------- Other --------------------------------- */
.nfd-bg-primary:not(.has-background),
.nfd-bg-accent:not(.has-background) {
	background-color: var(--wndb--color--primary) !important;
}
.nfd-bg-primary:not(.has-text-color),
.nfd-bg-accent:not(.has-text-color) {
	color: var(--wndb--color--white) !important;
}
.nfd-text-primary:not(.has-text-color),
.wp-block-button.wndb-text-primary > a:not(.has-text-color) {
	color: var(--wndb--color--primary) !important;
}
.nfd-text-current:where(:not(.has-text-color)),
.nfd-text-current:where(:not(.has-text-color)) a:where(:not(:hover)),
.editor-styles-wrapper div .nfd-text-current:where(:not(.has-text-color)),
.editor-styles-wrapper div :where(.nfd-text-current:not(.has-text-color):not(.wp-element-button)) a:where(:not(:hover)) {
	color: currentColor;
}
[class*='nfd-theme-'] .wp-block-social-links.is-style-logos-only:not(.has-icon-color) .wp-block-social-link {
	color: var(--wndb--color--text--faded) !important;
	fill: var(--wndb--color--text--faded) !important;
}
[class*='nfd-theme-'] .wp-block-social-links.is-style-logos-only:not(.has-icon-color) .wp-block-social-link:hover {
	color: var(--wndb--color--text) !important;
	fill: var(--wndb--color--text) !important;
}
/* ------------------------- Backward compatibility ------------------------- */
.nfd-bg-gray-100:not(.has-background),
.nfd-bg-gray-800:not(.has-background) {
	background-color: var(--wndb--color--surface) !important;
}
.nfd-bg-gray-100:not(.has-text-color),
.nfd-bg-gray-800:not(.has-text-color) {
	color: var(--wndb--color--text) !important;
}
.nfd-bg-gray-800 {
	--wndb--color--surface: var(--wndb-gray-800) !important;
	--wndb--color--text: var(--wndb-white) !important;
	--wndb--color--borders: var(--wndb-white-100) !important;
	--wndb--color--text--faded: var(--wndb-white-700) !important;
}
.nfd-bg-gray-100 {
	--wndb--color--surface: var(--wndb-gray-50) !important;
	--wndb--color--text: var(--wndb-gray-700) !important;
	--wndb--color--borders: var(--wndb-gray-100) !important;
}
.nfd-text-opacity-80 p:not(.has-text-color):not(.has-link-color):not(.has-background),
p.nfd-text-opacity-80:not(.has-text-color):not(.has-link-color):not(.has-background),
.nfd-text-opacity-80 time:not(.has-text-color):not(.has-background) {
	opacity: 0.8 !important;
}
/**
* Backgrounds
*
* A collection of CSS only utilities for adding backrounds.
*/
:root {
	--wndb-mask-color: rgba(0, 0, 0, 0.15) !important;
	--wndb-mask-position: 50% 50% at 50% 20% !important;
	--wndb-mask-opacity: 0.35 !important;
}
/* Global */
[class*='nfd-bg-effect'] {
	position: relative !important;
	isolation: isolate !important;
}
[class*='nfd-bg-effect']::after {
	content: '' !important;
	position: absolute !important;
	inset: 0 !important;
	z-index: -1 !important;
	pointer-events: none !important;
	-webkit-mask-image: radial-gradient(ellipse var(--wndb-mask-position), #000 70%, rgba(0, 0, 0, 0.3) 100%) !important;
	        mask-image: radial-gradient(ellipse var(--wndb-mask-position), #000 70%, rgba(0, 0, 0, 0.3) 100%) !important;
	opacity: var(--wndb-mask-opacity) !important;
}
/* ---------------------------------- Dots ---------------------------------- */
.nfd-bg-effect-dots::after {
	--wndb-mask-opacity: 1 !important;
	background: radial-gradient(var(--wndb-mask-color) 1px, transparent 1px) !important;
	background-size: 20px 20px !important;
}
/* Grid */
.nfd-bg-effect-grid::after {
	background-image: linear-gradient(to right, var(--wndb-mask-color) 1px, transparent 1px),
		linear-gradient(to bottom, var(--wndb-mask-color) 1px, transparent 1px) !important;
	background-size: 50px 50px !important;
}
/* Grid 2 */
.nfd-bg-effect-grid-2::after {
	background-image: linear-gradient(to right, var(--wndb-mask-color) 1px, transparent 1px),
		linear-gradient(to bottom, var(--wndb-mask-color) 1px, transparent 1px) !important;
	background-size: 14px 32px !important;
}
/* --------------------------------- Grid 3 --------------------------------- */
.nfd-bg-effect-grid-3 {
	overflow: hidden !important;
}
.nfd-bg-effect-grid-3::after {
	transform: scale(1.5) skew(-30deg, 30deg) !important;
	background-image: linear-gradient(to right, var(--wndb-mask-color) 1px, transparent 1px),
		linear-gradient(to bottom, var(--wndb-mask-color) 1px, transparent 1px) !important;
	background-size: 32px 80px !important;
	right: -25% !important;
	top: -10% !important;
}
/* ---------------------------------- Lines --------------------------------- */
.nfd-bg-effect-lines::after {
	--wndb-mask-opacity: 0.4 !important;
	background-image: linear-gradient(to right, var(--wndb-mask-color) 1px, transparent 1px) !important;
	background-size: 48px !important;
}
/* --------------------------------- Lines 2 -------------------------------- */
.nfd-bg-effect-lines-2 {
	overflow: hidden !important;
}
.nfd-bg-effect-lines-2::after {
	background-image: linear-gradient(to right, var(--wndb-mask-color) 1px, transparent 1px) !important;
	background-size: 32px 96px !important;
	transform: scale(1.5) skew(-45deg, 45deg) !important;
	right: -25% !important;
	top: -10% !important;
}
/* -------------------------------- Position -------------------------------- */
.nfd-bg-effect-position-center {
	--wndb-mask-position: 50% 50% at 50% 50% !important;
}
/**
* Border
*
* Border related utilities (radius)
* postcss plugin will add necessary :not([style*="-radius"]) to selectors.
*/
/**
* Border radius specific utilities
*/
:where(:root) {
	/**
    * Default border radius scale factor
    */
	--wndb--rounded--scale-factor: 1 !important;

	/**
    * Border radius scale
    */
	--wndb--border--radius--sm: 0.25rem !important;
	--wndb--border--radius--md: 0.5rem !important;
	--wndb--border--radius--lg: 0.75rem !important;
	--wndb--border--radius--xl: 1rem !important;
}
.nfd-rounded-none:not([style*="-radius"]) {
	border-radius: 0 !important;
}
.nfd-rounded-sm:not([style*='-radius']),
.nfd-rounded-sm:not([style*='-radius']) > img,
.nfd-rounded-sm:not([style*='-radius']) > .components-resizable-box__container > img:not([style*="-radius"]) {
	border-radius: calc(var(--wndb--border--radius--sm) * var(--wndb--rounded--scale-factor)) !important;
}
.nfd-rounded:not([style*='-radius']),
.nfd-rounded:not([style*='-radius']) > img,
.nfd-rounded:not([style*='-radius']) > .components-resizable-box__container > img:not([style*="-radius"]) {
	border-radius: calc(var(--wndb--border--radius--md) * var(--wndb--rounded--scale-factor)) !important;
}
.nfd-rounded-lg:not([style*='-radius']),
.nfd-rounded-lg:not([style*='-radius']) > img,
.nfd-rounded-lg:not([style*='-radius']) > .components-resizable-box__container > img:not([style*="-radius"]) {
	border-radius: calc(var(--wndb--border--radius--lg) * var(--wndb--rounded--scale-factor)) !important;
}
.nfd-rounded-xl:not([style*='-radius']),
.nfd-rounded-xl:not([style*='-radius']) > img,
.nfd-rounded:xl([style*='-radius']) > .components-resizable-box__container > img:not([style*="-radius"]) {
	border-radius: calc(var(--wndb--border--radius--xl) * var(--wndb--rounded--scale-factor)) !important;
}
.nfd-rounded-full:not([style*='-radius']),
.nfd-rounded-full:not([style*='-radius']) > img,
.nfd-rounded-full:not([style*='-radius']) > .components-resizable-box__container > img:not([style*="-radius"]) {
	border-radius: calc(9999px * var(--wndb--rounded--scale-factor)) !important;
}
/**
* Button
*
* Button related utilities.
*/
.nfd-btn-xl > .wp-block-button__link:not([style*='padding']) {
	padding: 16px 48px !important;
}
.nfd-btn-xl:not(.has-custom-font-size) > .wp-block-button__link:not([style*='font-size']) {
	font-size: 1.125rem !important;
}
.nfd-btn-xl:not([style*='font-weight']) > .wp-block-button__link {
	font-weight: 600 !important;
}
.nfd-btn-xl.is-style-fill > .wp-block-button__link:not(.has-background):not(.has-text-color) {
	color: #fff !important;
}
.nfd-btn-xl.is-style-fill > .wp-block-button__link:not(.has-background):not(.has-text-color):hover {
	color: #fff !important;
}
/**
* NFD Container (.nfd-container)
*
* This is meant to be used on top-level group block and it
* controlls the width of the content inside it and sets some default
* styling for our patterns (removes margins, sets font size...).
* 
* Requires "Inner blocks use content width" to be enabled on the group.
*
* The default width values can be overriden with:
*   1. The "content" and "wide" options in the block settings.
*   2. By inheriting "width" and "wide width" from the active theme.
*
* We are keeping the specificity of the selectors low so that it can be
* easily overriden by the theme or Gutenberg options.
*/
:where(:root) {

	/*
    * Default and wide container width. 
    * This is used if the width is not inherited from the theme.
    */
	--wndb--container: 1200px;
	--wndb--container--wide: 1340px;
}
/* ----------------------------- Container width ---------------------------- */
body .is-layout-constrained:has(.nfd-container.is-layout-constrained) > .nfd-container.is-layout-constrained {
	width: 100% !important;
	max-width: unset !important;
}
.nfd-container:is(.is-layout-constrained) > :where(:not(.alignleft):not(.alignright):not(.alignfull):not(.alignwide)),
.editor-styles-wrapper .nfd-container:is(.is-layout-constrained) > :where(:not(.alignleft):not(.alignright):not(.alignfull):not(.alignwide)),
.nfd-container > :where(.wp-block-cover-is-layout-constrained:not(.alignleft):not(.alignright):not(.alignfull):not(.alignwide)),
.editor-styles-wrapper .nfd-container > :where(.wp-block-cover-is-layout-constrained:not(.alignleft):not(.alignright):not(.alignfull):not(.alignwide)) {
	width: 100%;
	max-width: var(--wndb--container);
}
/* ------------------------------- Wide width ------------------------------- */
.nfd-container:is(.is-layout-constrained) > .alignwide,
.editor-styles-wrapper .nfd-container:is(.is-layout-constrained) > .alignwide {
	width: 100%;
	max-width: var(--wndb--container--wide);
}
/* ----------------------------- Inline padding ----------------------------- */
.nfd-container:not(.alignfull) {
	padding-inline: var(--wndb--p) !important;
}
/**
* Miscellaneous utility classes
*
* Various utility classes used by the rest of the module.
*/
.nfd-h-full,
.nfd-h-full > img,
.nfd-h-full > .components-resizable-box__container > img {
	height: 100% !important;
}
.nfd-w-full,
.nfd-w-full > img,
.nfd-w-full > .components-resizable-box__container > img {
	width: 100% !important;
}
.nfd-backdrop-blur-sm {
	-webkit-backdrop-filter: blur(4px) !important;
	        backdrop-filter: blur(4px) !important;
}
.nfd-backdrop-blur-md {
	-webkit-backdrop-filter: blur(4px) !important;
	        backdrop-filter: blur(4px) !important;
}
/**
* Shadows
*
* box-shadow related utilities.
*/
:where(:root) {
	--wndb--shadow--xs: 0 1px 2px 0 rgba(18, 18, 23, 0.065) !important;
	--wndb--shadow--sm: 0 1px 3px 0 rgba(18, 18, 23, 0.1), 0 1px 2px 0 rgba(18, 18, 23, 0.06) !important;
}
.nfd-shadow-xs:not([style*='box-shadow']) {
	box-shadow: var(--wndb--shadow--xs) !important;
}
.nfd-shadow-sm:not([style*='box-shadow']) {
	box-shadow: var(--wndb--shadow--sm) !important;
}
/* -------------------------------------------------------------------------- */
/*                                   Slider                                   */
/* -------------------------------------------------------------------------- */
.nfd-scroll-slider {
	flex-wrap: nowrap !important;
	height: 100vh !important;
	overflow-y: auto !important;
	scroll-snap-type: y mandatory !important;

	-ms-overflow-style: none !important; /* IE and Edge */
	scrollbar-width: none !important; /* Firefox */
}
.nfd-scroll-slider::-webkit-scrollbar {
	display: none !important;
}
.nfd-scroll-slider > * {
	scroll-snap-align: start !important;
}
/**
* Spacing
*
* These classes are used to add paddings, margins and gaps to blocks.
* They can be scaled up to 4 levels: base, md, lg, xl.
* Additionaly, scaling-factor can be defined.
*
* postcss plugin will add necessary :not([style*="padding"]) to selectors.
*/
/**
* Padding specific utilities
*/
:where(:root) {
	/**
    * Default spacing scale factor
    */
	--wndb--padding-factor: 1 !important;

	/*
    * Default padding base
    */
	--wndb--p: 2.375rem !important;

	/**
    * xs
    */
	--wndb--p--xs: 0.75rem !important;

	/**
    * sm
    */
	--wndb--p--sm: 1.5rem !important;

	/**
    * md
    */
	--wndb--p--md: 2rem !important;

	/**
    * lg
    */
	--wndb--p--lg: clamp(2.82rem, 7vw, 6.25rem) !important;
}
/* ---------------------------------- Card ---------------------------------- */
.nfd-p-card-sm:not([style*="padding"]) {
	padding: calc(var(--wndb--p--xs) * var(--wndb--padding-factor)) calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) !important;
}
.nfd-p-card-md:not([style*="padding"]) {
	padding: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) calc(var(--wndb--p--md) * var(--wndb--padding-factor)) !important;
}
.nfd-p-card-lg:not([style*="padding"]) {
	padding: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) calc(var(--wndb--p--md) * var(--wndb--padding-factor)) !important;
}
@media screen and (min-width: 782px) {
	.nfd-p-card-lg:not([style*="padding"]) {
		padding: calc(var(--wndb--p--md) * var(--wndb--padding-factor)) calc(10% * var(--wndb--padding-factor)) !important;
	}
}
/* --------------------------------- XSmall --------------------------------- */
.nfd-p-xs:not([style*="padding"]) {
	padding: calc(var(--wndb--p--xs) * var(--wndb--padding-factor)) !important;
}
.nfd-py-xs:not([style*="padding"]) {
	padding-block: calc(var(--wndb--p--xs) * var(--wndb--padding-factor)) !important;
}
.nfd-pt-xs:not([style*="padding"]) {
	padding-block-start: calc(var(--wndb--p--xs) * var(--wndb--padding-factor)) !important;
}
.nfd-px-xs:not([style*="padding"]) {
	padding-inline: calc(var(--wndb--p--xs) * var(--wndb--padding-factor)) !important;
}
/* ---------------------------------- Small --------------------------------- */
.nfd-p-sm:not([style*="padding"]) {
	padding: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) !important;
}
.nfd-px-sm:not([style*="padding"]) {
	padding-inline: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) !important;
}
.nfd-py-sm:not([style*="padding"]) {
	padding-block: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) !important;
}
.nfd-pt-sm:not([style*="padding"]) {
	padding-block-start: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) !important;
}
.nfd-pb-sm:not([style*="padding"]) {
	padding-block-end: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) !important;
}
.nfd-pl-sm:not([style*="padding"]) {
	padding-left: calc(var(--wndb--p--sm) * var(--wndb--padding-factor)) !important;
}
/* --------------------------------- Medium --------------------------------- */
.nfd-p-md:not([style*="padding"]) {
	padding: calc(var(--wndb--p--md) * var(--wndb--padding-factor)) !important;
}
.nfd-px-md:not([style*="padding"]) {
	padding-inline: calc(var(--wndb--p--md) * var(--wndb--padding-factor)) !important;
}
.nfd-py-md:not([style*="padding"]) {
	padding-block: calc(var(--wndb--p--md) * var(--wndb--padding-factor)) !important;
}
.nfd-pt-md:not([style*="padding"]) {
	padding-block: calc(var(--wndb--p--md) * var(--wndb--padding-factor)) !important;
}
.nfd-pb-md:not([style*="padding"]) {
	padding-block: calc(var(--wndb--p--md) * var(--wndb--padding-factor)) !important;
}
/* ---------------------------------- Large --------------------------------- */
.nfd-p-lg:not([style*="padding"]) {
	padding: calc(var(--wndb--p--lg) * var(--wndb--padding-factor)) calc(var(--wndb--p--md) * var(--wndb--padding-factor)) !important;
}
/* --------------------------------- Offset --------------------------------- */
.nfd-pl-offset-md:not([style*="padding"]) {
	padding-left: calc(var(--wndb--p--md) * var(--wndb--padding-factor) - 3px) !important;
	margin-left: calc(var(--wndb--p--md) * var(--wndb--padding-factor) * -1) !important;
}
/* Horizontally overlap children. */
.nfd-overlap-x,
.editor-styles-wrapper .nfd-overlap-x {
	gap: 0;
}
.nfd-overlap-x > *:not(:first-child) {
	margin-inline-start: -1rem !important;
}
:where(:root) {
	/**
    * Default gap scale factor
    */
	--wndb--gap--scale-factor: 1 !important;

	/**
    * Scale
    */
	--wndb--gap--xs: 0.25rem !important;
	--wndb--gap--sm: 0.5rem !important;
	--wndb--gap--md: 1rem !important;
	--wndb--gap--lg: 1.5rem !important;
	--wndb--gap--xl: 2rem !important;
	--wndb--gap--2xl: 2.5rem !important;
	--wndb--gap--3xl: 3.5rem !important;
}
/* No Gap */
.nfd-gap-0,
.editor-styles-wrapper .nfd-gap-0 {
	gap: 0;
}
/* Extra Small */
.nfd-gap-xs,
.editor-styles-wrapper .nfd-gap-xs {
	gap: calc(var(--wndb--gap--xs) * var(--wndb--gap--scale-factor));
}
/* Small */
.nfd-gap-sm,
.editor-styles-wrapper .nfd-gap-sm {
	gap: calc(var(--wndb--gap--sm) * var(--wndb--gap--scale-factor));
}
/* Medium */
.nfd-gap-md,
.editor-styles-wrapper .nfd-gap-md {
	gap: calc(var(--wndb--gap--md) * var(--wndb--gap--scale-factor));
}
/* Large */
.nfd-gap-lg,
.editor-styles-wrapper .nfd-gap-lg {
	gap: calc(var(--wndb--gap--lg) * var(--wndb--gap--scale-factor));
}
.nfd-gap-x-lg,
.editor-styles-wrapper .nfd-gap-x-lg {
	-moz-column-gap: calc(var(--wndb--gap--lg) * var(--wndb--gap--scale-factor));
	     column-gap: calc(var(--wndb--gap--lg) * var(--wndb--gap--scale-factor));
}
/* XLarge */
.nfd-gap-xl,
.editor-styles-wrapper .nfd-gap-xl {
	gap: calc(var(--wndb--gap--xl) * var(--wndb--gap--scale-factor));
}
/* XXLarge */
.nfd-gap-2xl,
.editor-styles-wrapper .nfd-gap-2xl {
	gap: calc(var(--wndb--gap--2xl) * var(--wndb--gap--scale-factor));
}
.nfd-gap-y-2xl,
.editor-styles-wrapper .nfd-gap-y-2xl {
	row-gap: calc(var(--wndb--gap--2xl) * var(--wndb--gap--scale-factor));
}
/* XXXLarge */
.nfd-gap-y-3xl,
.editor-styles-wrapper .nfd-gap-y-3xl {
	row-gap: calc(var(--wndb--gap--3xl) * var(--wndb--gap--scale-factor));
}
/**
* Typography related utilities
*/
:where(:root) {
	--wndb--max-w--prose: min(65ch, 700px) !important;
}
.nfd-max-w-prose {
	max-width: var(--wndb--max-w--prose) !important;
}
:where(.nfd-text-balance) {
	text-wrap: balance !important;
	max-width: var(--wndb--max-w--prose) !important;
}
.nfd-text-balance > p,
.nfd-text-balance > h1,
.nfd-text-balance > h2,
.nfd-text-balance > h3,
.nfd-text-balance > h4 {
	text-wrap: balance !important;
}
.nfd-text-pretty {
	text-wrap: pretty !important;
}
.nfd-text-pretty > p,
.nfd-text-pretty > h1,
.nfd-text-pretty > h2,
.nfd-text-pretty > h3,
.nfd-text-pretty > h4 {
	text-wrap: pretty !important;
}
:where(:root) {
	/**
    * Default text scale factor
    */
	--wndb--text-scale-factor: 1 !important;

	/* Scale */
	--wndb--text--sm: 0.875rem !important;
	--wndb--text--base: 1rem !important;
	--wndb--text--md: 1.125rem !important;
	--wndb--text--lg: 1.5rem !important;
	--wndb--text--xl: 2.375rem !important;
	--wndb--text--huge: clamp(2.75rem, 1.4688rem + 2.5vw, 3.5rem) !important;
}
/* Small */
.nfd-text-sm:not([class*='font-size']):not([style*='font-size']) {
	font-size: calc(var(--wndb--text--sm) * var(--wndb--text-scale-factor)) !important;
}
/* Base */
.nfd-text-base:not([class*='font-size']):not([style*='font-size']) {
	font-size: calc(var(--wndb--text--base) * var(--wndb--text-scale-factor)) !important;
}
/* Medium */
.nfd-text-md:not([class*='font-size']):not([style*='font-size']) {
	font-size: calc(var(--wndb--text--md) * var(--wndb--text-scale-factor)) !important;
}
.nfd-text-md:not([style*='line-height']) {
	line-height: 1.5 !important;
}
/* Large */
.nfd-text-lg:not([class*='font-size']):not([style*='font-size']) {
	font-size: calc(var(--wndb--text--lg) * var(--wndb--text-scale-factor)) !important;
}
.nfd-text-lg:not([style*='line-height']) {
	line-height: 1.4 !important;
}
.nfd-text-lg:not([style*='letter-spacing']) {
	letter-spacing: -0.02em !important;
}
.nfd-text-lg:not([style*='font-weight']) {
	font-weight: 500 !important;
}
/* XLarge */
.nfd-text-xl:not([class*='font-size']):not([style*='font-size']) {
	font-size: var(--wndb--text--xl) !important;
}
.nfd-text-xl:not([style*='line-height']) {
	line-height: 1.25 !important;
}
.nfd-text-xl:not([style*='letter-spacing']) {
	letter-spacing: -0.01em !important;
}
.nfd-text-xl:not([style*='font-weight']) {
	font-weight: 500 !important;
}
/* Huge */
:where(.nfd-text-huge:not([class*='font-size']):not([style*='font-size'])) {
	font-size: calc(var(--wndb--text--huge) * var(--wndb--text-scale-factor)) !important;
	text-wrap: balance !important;
	max-width: var(--wndb--max-w--prose) !important;
}
.nfd-text-huge:not([style*='line-height']) {
	line-height: 1.16667 !important;
}
.nfd-text-huge:not([style*='letter-spacing']) {
	letter-spacing: -0.04em !important;
}
.nfd-text-huge:not([style*='font-weight']) {
	font-weight: 500 !important;
}
/* Needs check */
/* -------------------------------------------------------------------------- */
/*                                 Dividers                                 */
/* -------------------------------------------------------------------------- */
[class*='nfd-divider-'] {
	--nfd-divider-size: 0px;
	position: relative;
	z-index: 13;
}
[class*='nfd-divider-'] ~ [class*='nfd-divider-'] {
	z-index: 12 !important;
}
[class*='nfd-divider-'] ~ [class*='nfd-divider-'] ~ [class*='nfd-divider-'] {
	z-index: 11 !important;
}
[class*='nfd-divider-']::before {
	position: absolute !important;
	content: '' !important;
	pointer-events: none !important;
	z-index: 10 !important;
	background: inherit !important;
	left: 0 !important;
	bottom: calc(-1 * var(--nfd-divider-size)) !important;
	width: 100% !important;
	height: var(--nfd-divider-size) !important;
}
/* ---------------------------- ZigZag Divider ---------------------------- */
.nfd-divider-zigzag {
	--nfd-divider-size: 8px;
}
.nfd-divider-zigzag::before {
	-webkit-mask: conic-gradient(from -45deg at bottom, #0000, #000 1deg 89deg, #0000 90deg) 50% / calc(var(--nfd-divider-size) * 2) 100% !important;
	        mask: conic-gradient(from -45deg at bottom, #0000, #000 1deg 89deg, #0000 90deg) 50% / calc(var(--nfd-divider-size) * 2) 100% !important;
}
/* ---------------------------- Slant Divider ----------------------------- */
.nfd-divider-slant,
.nfd-divider-slant-invert {
	--nfd-divider-size: 80px;
}
.nfd-divider-slant::before {
	-webkit-clip-path: polygon(0 0, 100% 0, 0 100%) !important;
	        clip-path: polygon(0 0, 100% 0, 0 100%) !important;
	bottom: calc(calc(-1 * var(--nfd-divider-size)) + 1px) !important;
}
.nfd-divider-slant-invert::before {
	-webkit-clip-path: polygon(0 0, 100% 0, 100% 100%) !important;
	        clip-path: polygon(0 0, 100% 0, 100% 100%) !important;
	bottom: calc(calc(-1 * var(--nfd-divider-size)) + 1px) !important;
}
/* ---------------------------- Arrow Divider ----------------------------- */
.nfd-divider-arrow {
	--nfd-divider-size: 16px;
}
.nfd-divider-arrow::before {
	left: 50% !important;
	width: calc(var(--nfd-divider-size) * 2) !important;
	height: calc(var(--nfd-divider-size) * 2) !important;
	transform: translateX(-50%) rotate(45deg) !important;
	bottom: calc(var(--nfd-divider-size) * -1) !important;
}
/* --------------------------- Triangle Divider --------------------------- */
.nfd-divider-triangle {
	--nfd-divider-size: 80px;
}
.nfd-divider-triangle::before {
	-webkit-clip-path: polygon(0 0, 100% 0, 50% 100%) !important;
	        clip-path: polygon(0 0, 100% 0, 50% 100%) !important;
	bottom: calc(calc(-1 * var(--nfd-divider-size)) + 1px) !important;
}
/* --------------------------- Ellipse Divider ---------------------------- */
.nfd-divider-ellipse {
	--nfd-divider-size: 50px;
}
.nfd-divider-ellipse::before {
	-webkit-clip-path: ellipse(50% var(--nfd-divider-size) at 50% 0%) !important;
	        clip-path: ellipse(50% var(--nfd-divider-size) at 50% 0%) !important;
}
/* ---------------------------- Rounded Divider --------------------------- */
.nfd-divider-rounded:not([style*="-radius"]) {
	--nfd-divider-size: 50px;
}
.nfd-divider-rounded::before:not([style*="-radius"]) {
	border-bottom-left-radius: var(--nfd-divider-size) !important;
	border-bottom-right-radius: var(--nfd-divider-size) !important;
}
.nfd-divider-clouds {
	--nfd-divider-size: 150px;
}
.nfd-divider-clouds::before,
.nfd-divider-clouds::after {
	content: '' !important;
	position: absolute !important;
	pointer-events: none !important;
	z-index: 10 !important;
	background: inherit !important;
	top: 0 !important;
	left: 0 !important;
	width: 100% !important;
	height: var(--nfd-divider-size) !important;
	background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 283.5 27.8' preserveAspectRatio='xMidYMax slice'%3E%3Cpath d='M0 0v6.7c1.9-.8 4.7-1.4 8.5-1 9.5 1.1 11.1 6 11.1 6s2.1-.7 4.3-.2c2.1.5 2.8 2.6 2.8 2.6s.2-.5 1.4-.7c1.2-.2 1.7.2 1.7.2s0-2.1 1.9-2.8c1.9-.7 3.6.7 3.6.7s.7-2.9 3.1-4.1 4.7 0 4.7 0 1.2-.5 2.4 0 1.7 1.4 1.7 1.4h1.4c.7 0 1.2.7 1.2.7s.8-1.8 4-2.2c3.5-.4 5.3 2.4 6.2 4.4.4-.4 1-.7 1.8-.9 2.8-.7 4 .7 4 .7s1.7-5 11.1-6c9.5-1.1 12.3 3.9 12.3 3.9s1.2-4.8 5.7-5.7c4.5-.9 6.8 1.8 6.8 1.8s.6-.6 1.5-.9c.9-.2 1.9-.2 1.9-.2s5.2-6.4 12.6-3.3c7.3 3.1 4.7 9 4.7 9s1.9-.9 4 0 2.8 2.4 2.8 2.4 1.9-1.2 4.5-1.2 4.3 1.2 4.3 1.2.2-1 1.4-1.7 2.1-.7 2.1-.7-.5-3.1 2.1-5.5 5.7-1.4 5.7-1.4 1.5-2.3 4.2-1.1c2.7 1.2 1.7 5.2 1.7 5.2s.3-.1 1.3.5c.5.4.8.8.9 1.1.5-1.4 2.4-5.8 8.4-4 7.1 2.1 3.5 8.9 3.5 8.9s.8-.4 2 0 1.1 1.1 1.1 1.1 1.1-1.1 2.3-1.1 2.1.5 2.1.5 1.9-3.6 6.2-1.2 1.9 6.4 1.9 6.4 2.6-2.4 7.4 0c3.4 1.7 3.9 4.9 3.9 4.9s3.3-6.9 10.4-7.9 11.5 2.6 11.5 2.6.8 0 1.2.2c.4.2.9.9.9.9s4.4-3.1 8.3.2c1.9 1.7 1.5 5 1.5 5s.3-1.1 1.6-1.4c1.3-.3 2.3.2 2.3.2s-.1-1.2.5-1.9 1.9-.9 1.9-.9-4.7-9.3 4.4-13.4c5.6-2.5 9.2.9 9.2.9s5-6.2 15.9-6.2 16.1 8.1 16.1 8.1.7-.2 1.6-.4V0H0z' fill='%23ffffff'%3E%3C/path%3E%3C/svg%3E") !important;
	background-repeat: repeat-x !important;
	background-size: cover !important;
}
.nfd-divider-clouds::after {
	transform: rotate(180deg) !important;
	bottom: 0 !important;
	top: auto !important;
}
/* -------------------------------------------------------------------------- */
/*                                 Animations                                 */
/* -------------------------------------------------------------------------- */
:root {
	--nfd-wb-anim-transition-duration: 1400ms;
	--nfd-wb-anim-transition-delay: 50ms;
	--nfd-wb-anim-transition-easing-function: cubic-bezier(0.4, 1, 0.65, 1);
	--nfd-wb-anim-transition: all var(--nfd-wb-anim-transition-duration) var(--nfd-wb-anim-transition-easing-function) var(--nfd-wb-anim-transition-delay);
}
/* No animations on mobile or reduced motion */
@media (prefers-reduced-motion: reduce) {
	.nfd-wb-animate {
		transition: none !important;
	}
}
@media (max-width: 782px) {
	.nfd-wb-animate {
		transition: none !important;
	}
}
/* Allow animations to be replayed. This attribute is removed from element with JS, causing the animation to be replayed */
.nfd-wb-animate[data-replay-animation] {
	transition: none !important;
}
/* --------------------------------- Fade In -------------------------------- */
[class*='nfd-wb-fade-in'] {
	--nfd-wb-anim-transition: opacity var(--nfd-wb-anim-transition-duration) var(--nfd-wb-anim-transition-easing-function) var(--nfd-wb-anim-transition-delay),
		transform var(--nfd-wb-anim-transition-duration) var(--nfd-wb-anim-transition-easing-function) var(--nfd-wb-anim-transition-delay);

	transition: var(--nfd-wb-anim-transition);
}
/* Bottom (long) */
.nfd-wb-fade-in-bottom {
	--nfd-wb-anim-transition-duration: 1200ms;

	opacity: 0;
	transform: translate3d(0, 90px, 0);
	transition: var(--nfd-wb-anim-transition);
}
/* Bottom */
.nfd-wb-fade-in-bottom-short {
	--nfd-wb-anim-transition-duration: 600ms;

	opacity: 0;
	transform-origin: center bottom;
	transform: translate3d(0, 32px, 0) scale3d(0.96, 0.96, 0.96);
	transition: var(--nfd-wb-anim-transition);
}
/* Top */
.nfd-wb-fade-in-top-short {
	--nfd-wb-anim-transition-duration: 600ms;

	opacity: 0;
	transform-origin: center top;
	transform: translate3d(0, -32px, 0) scale3d(0.96, 0.96, 0.96);
	transition: var(--nfd-wb-anim-transition);
}
/* Left */
.nfd-wb-fade-in-left-short {
	--nfd-wb-anim-transition-duration: 600ms;

	opacity: 0;
	transform-origin: center left;
	transform: translate3d(-32px, 0, 0) scale3d(0.96, 0.96, 0.96);
	transition: var(--nfd-wb-anim-transition);
}
/* Right */
.nfd-wb-fade-in-right-short {
	--nfd-wb-anim-transition-duration: 600ms;

	opacity: 0;
	transform-origin: right center;
	transform: translate3d(32px, 0, 0) scale3d(0.96, 0.96, 0.96);
	transition: var(--nfd-wb-anim-transition);
}
.nfd-wb-animated-in:not([data-replay-animation])[class*='nfd-wb-fade-in'] {
	opacity: 1;
	transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
}
/* --------------------------------- Zoom In -------------------------------- */
.nfd-wb-zoom-in {
	--nfd-wb-anim-transition-duration: 1200ms;

	--nfd-wb-anim-transition: opacity var(--nfd-wb-anim-transition-duration) var(--nfd-wb-anim-transition-easing-function) var(--nfd-wb-anim-transition-delay),
		transform var(--nfd-wb-anim-transition-duration) var(--nfd-wb-anim-transition-easing-function) var(--nfd-wb-anim-transition-delay);

	opacity: 0;
	transform: scale3d(0.4, 0.4, 0.4);
	transition: var(--nfd-wb-anim-transition);
}
.nfd-wb-animated-in:not([data-replay-animation])[class*='nfd-wb-zoom-'] {
	opacity: 1 !important;
	transform: scale3d(1, 1, 1) !important;
}
.nfd-wb-zoom-in-short {
	--nfd-wb-anim-transition-duration: 600ms;

	--nfd-wb-anim-transition: opacity var(--nfd-wb-anim-transition-duration) var(--nfd-wb-anim-transition-easing-function) var(--nfd-wb-anim-transition-delay),
		transform var(--nfd-wb-anim-transition-duration) var(--nfd-wb-anim-transition-easing-function) var(--nfd-wb-anim-transition-delay);

	opacity: 0;
	transform: scale3d(0.92, 0.92, 0.92);
	transition: var(--nfd-wb-anim-transition);
}
/* -------------------------------- Twist In -------------------------------- */
div:has(> .nfd-wb-twist-in) {
	perspective: 1200px;
}
.nfd-wb-twist-in {
	--nfd-wb-anim-transition-duration: 1000ms;

	--nfd-wb-anim-transition: opacity var(--nfd-wb-anim-transition-duration) var(--nfd-wb-anim-transition-easing-function) var(--nfd-wb-anim-transition-delay),
		transform var(--nfd-wb-anim-transition-duration) var(--nfd-wb-anim-transition-easing-function) var(--nfd-wb-anim-transition-delay);
	opacity: 0;
	transform: translateY(40px) scale(0.8) rotateY(30deg) rotateZ(-12deg) translateZ(0);
	transition: var(--nfd-wb-anim-transition);
}
.nfd-wb-animated-in:not([data-replay-animation]).nfd-wb-twist-in {
	opacity: 1 !important;
	transform: translateY(0px) scale(1) rotateY(0deg) rotateZ(0deg) translateZ(0) !important;
}
/* ---------------------------- Reveal Animations --------------------------- */
/* Mask reveal animations require DOM parent to be used for intersection observer */
.nfd-wb-reveal-right {
	--nfd-wb-anim-transition-duration: 1500ms;
	--nfd-wb-anim-transition-easing-function: cubic-bezier(0.4, 0, 0, 1);
	--nfd-wb-anim-transition: clip-path var(--nfd-wb-anim-transition-duration) var(--nfd-wb-anim-transition-easing-function) var(--nfd-wb-anim-transition-delay);

	transition: var(--nfd-wb-anim-transition);
	-webkit-clip-path: inset(0 100% 0 0);
	        clip-path: inset(0 100% 0 0);
}
.nfd-wb-animated-in > .nfd-wb-reveal-right:not([data-replay-animation]) {
	-webkit-clip-path: inset(0 0 0 0) !important;
	        clip-path: inset(0 0 0 0) !important;
}
/* --------------------------------- Delays --------------------------------- */
.nfd-delay-50 {
	--nfd-wb-anim-transition-delay: 50ms !important;
}
.nfd-delay-150 {
	--nfd-wb-anim-transition-delay: 150ms !important;
}
.nfd-delay-300 {
	--nfd-wb-anim-transition-delay: 300ms !important;
}
.nfd-delay-450 {
	--nfd-wb-anim-transition-delay: 450ms !important;
}
.nfd-delay-600 {
	--nfd-wb-anim-transition-delay: 600ms !important;
}
.nfd-delay-750 {
	--nfd-wb-anim-transition-delay: 750ms !important;
}
.nfd-delay-900 {
	--nfd-wb-anim-transition-delay: 900ms !important;
}
.nfd-delay-1050 {
	--nfd-wb-anim-transition-delay: 1050ms !important;
}
.nfd-delay-1200 {
	--nfd-wb-anim-transition-delay: 1200ms !important;
}
.nfd-delay-1350 {
	--nfd-wb-anim-transition-delay: 1350ms !important;
}
.nfd-delay-1500 {
	--nfd-wb-anim-transition-delay: 1500ms !important;
}
/* Not-refactored yet */
/* @import 'parts/defaults';
@import 'parts/block-preview';
@import 'parts/colors';
@import 'parts/form';
@import 'parts/misc';
@import 'parts/blog';
@import 'parts/spacing';
@import 'parts/typography'; */
@media (max-width: 782px) {
	.md\:nfd-order-2 {
		order: 2 !important;
	}
	.md\:nfd-my-0:not([style*="margin"]) {
		margin-top: 0px !important;
		margin-bottom: 0px !important;
	}
	.md\:nfd-flex {
		display: flex !important;
	}
	.md\:nfd-hidden {
		display: none !important;
	}
	.md\:nfd-basis-full {
		flex-basis: 100% !important;
	}
	.md\:nfd-grid-cols-1 {
		grid-template-columns: repeat(1, minmax(0, 1fr)) !important;
	}
	.md\:nfd-flex-wrap {
		flex-wrap: wrap !important;
	}
	.md\:nfd-items-start {
		align-items: flex-start !important;
	}
	.md\:nfd-justify-start {
		justify-content: flex-start !important;
	}
	.md\:nfd-justify-end {
		justify-content: flex-end !important;
	}
	.md\:nfd-justify-center {
		justify-content: center !important;
	}
	.md\:nfd-gap-5 {
		gap: 1.25rem !important;
	}
	.md\:nfd-gap-8 {
		gap: 2rem !important;
	}
	.md\:nfd-self-start {
		align-self: flex-start !important;
	}
	.md\:nfd-rounded-lg:not([style*="-radius"]) {
		border-radius: 0.5rem !important;
	}
	.md\:nfd-border-none {
		border-style: none !important;
	}
	.md\:nfd-p-0:not([style*="padding"]) {
		padding: 0px !important;
	}
	.md\:nfd-px-0:not([style*="padding"]) {
		padding-left: 0px !important;
		padding-right: 0px !important;
	}
	.md\:nfd-py-0:not([style*="padding"]) {
		padding-top: 0px !important;
		padding-bottom: 0px !important;
	}
	.md\:nfd-text-left {
		text-align: left !important;
	}
	.md\:nfd-text-center {
		text-align: center !important;
	}
}
