{
  "version": 3,
  "sources": ["../scripts/viewportAnimationObserver.js", "../scripts/utilities.js"],
  "sourcesContent": ["/**\n * Class for observing elements entering the viewport and triggering animations.\n *\n */\nexport class ViewportAnimationObserver {\n\tconstructor(options = {}) {\n\t\tthis.options = {\n\t\t\tactiveClass: 'nfd-wb-animated-in',\n\t\t\troot: null,\n\t\t\trootMargin: '0px',\n\t\t\tthreshold: 0,\n\t\t\t...options,\n\t\t};\n\t}\n\n\t/**\n\t * Observe elements to trigger animations.\n\t *\n\t * @param {NodeList} elements - Elements to observe.\n\t */\n\tobserveElements(elements) {\n\t\tif (!('IntersectionObserver' in window)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// eslint-disable-next-line no-undef\n\t\tconst observer = new IntersectionObserver(\n\t\t\tthis._handleIntersection.bind(this),\n\t\t\tthis.options\n\t\t);\n\n\t\telements.forEach((element) => {\n\t\t\tlet elementToWatch = element;\n\n\t\t\tif (element.classList.contains('nfd-wb-reveal-right')) {\n\t\t\t\telementToWatch = element.parentElement;\n\t\t\t}\n\n\t\t\tobserver.observe(elementToWatch);\n\t\t});\n\t}\n\n\t/**\n\t * Handle intersection events to trigger animations.\n\t *\n\t * @param {Array<IntersectionObserverEntry>} entries  - Intersection entries.\n\t * @param {IntersectionObserver}             observer - The observer instance.\n\t * @private\n\t */\n\t_handleIntersection(entries, observer) {\n\t\tentries.forEach((entry) => {\n\t\t\tif (entry.isIntersecting) {\n\t\t\t\tentry.target.classList.add(this.options.activeClass);\n\n\t\t\t\t// Sync with parent element\n\t\t\t\tentry.target\n\t\t\t\t\t.querySelectorAll('.nfd-wb-animate')\n\t\t\t\t\t.forEach((element) => {\n\t\t\t\t\t\telement.classList.add(this.options.activeClass);\n\t\t\t\t\t});\n\n\t\t\t\tobserver.unobserve(entry.target);\n\t\t\t}\n\t\t});\n\t}\n}\n", "import { ViewportAnimationObserver } from './viewportAnimationObserver';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tviewportAnimation();\n});\n\n// listen for wonder-blocks/toolbar-button-added event\ndocument.addEventListener('wonder-blocks/toolbar-button-added', () => {\n\tviewportAnimation();\n});\n\n/**\n * Handles viewport animations (entrance/exit).\n */\nfunction viewportAnimation() {\n\tconst isGutenberg = document.body.classList.contains('block-editor-page');\n\n\tconst viewportAnimationObserver = new ViewportAnimationObserver({\n\t\troot: isGutenberg\n\t\t\t? document.querySelector('.interface-interface-skeleton__content') // Gutenberg scroll container\n\t\t\t: null,\n\t\tthreshold: 0.2, // at least 20% of the element is in the viewport\n\t});\n\n\tconst elementsToAnimate = document.querySelectorAll('.nfd-wb-animate');\n\n\tif (!isGutenberg) {\n\t\tviewportAnimationObserver.observeElements(elementsToAnimate);\n\t}\n}\n"],
  "mappings": ";;AAIO,MAAM,4BAAN,MAAgC;AAAA,IACtC,YAAY,UAAU,CAAC,GAAG;AACzB,WAAK,UAAU;AAAA,QACd,aAAa;AAAA,QACb,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,GAAG;AAAA,MACJ;AAAA,IACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,gBAAgB,UAAU;AACzB,UAAI,EAAE,0BAA0B,SAAS;AACxC;AAAA,MACD;AAGA,YAAM,WAAW,IAAI;AAAA,QACpB,KAAK,oBAAoB,KAAK,IAAI;AAAA,QAClC,KAAK;AAAA,MACN;AAEA,eAAS,QAAQ,CAAC,YAAY;AAC7B,YAAI,iBAAiB;AAErB,YAAI,QAAQ,UAAU,SAAS,qBAAqB,GAAG;AACtD,2BAAiB,QAAQ;AAAA,QAC1B;AAEA,iBAAS,QAAQ,cAAc;AAAA,MAChC,CAAC;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,oBAAoB,SAAS,UAAU;AACtC,cAAQ,QAAQ,CAAC,UAAU;AAC1B,YAAI,MAAM,gBAAgB;AACzB,gBAAM,OAAO,UAAU,IAAI,KAAK,QAAQ,WAAW;AAGnD,gBAAM,OACJ,iBAAiB,iBAAiB,EAClC,QAAQ,CAAC,YAAY;AACrB,oBAAQ,UAAU,IAAI,KAAK,QAAQ,WAAW;AAAA,UAC/C,CAAC;AAEF,mBAAS,UAAU,MAAM,MAAM;AAAA,QAChC;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;;;AC/DA,WAAS,iBAAiB,oBAAoB,MAAM;AACnD,sBAAkB;AAAA,EACnB,CAAC;AAGD,WAAS,iBAAiB,sCAAsC,MAAM;AACrE,sBAAkB;AAAA,EACnB,CAAC;AAKD,WAAS,oBAAoB;AAC5B,UAAM,cAAc,SAAS,KAAK,UAAU,SAAS,mBAAmB;AAExE,UAAM,4BAA4B,IAAI,0BAA0B;AAAA,MAC/D,MAAM,cACH,SAAS,cAAc,wCAAwC,IAC/D;AAAA,MACH,WAAW;AAAA;AAAA,IACZ,CAAC;AAED,UAAM,oBAAoB,SAAS,iBAAiB,iBAAiB;AAErE,QAAI,CAAC,aAAa;AACjB,gCAA0B,gBAAgB,iBAAiB;AAAA,IAC5D;AAAA,EACD;",
  "names": []
}
