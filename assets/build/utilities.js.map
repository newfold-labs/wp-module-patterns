{
  "version": 3,
  "sources": ["../scripts/viewportAnimationObserver.js", "../scripts/utilities.js"],
  "sourcesContent": ["/**\n * Class for observing elements entering the viewport and triggering animations.\n *\n */\nexport class ViewportAnimationObserver {\n\tconstructor({ clientId, ...otherOptions } = {}) {\n\t\tthis.options = {\n\t\t\tactiveClass: 'nfd-wb-animated-in',\n\t\t\troot: null,\n\t\t\trootMargin: '0px',\n\t\t\tthreshold: 0,\n\t\t\t...otherOptions,\n\t\t};\n\t}\n\n\t/**\n\t * Observe elements to trigger animations.\n\t *\n\t * @param {NodeList}      elements    - Elements to observe.\n\t * @param {string | null} clientId    - The block's client ID.\n\t * @param {boolean}       isGutenberg - Whether or not the page is in Gutenberg.\n\t */\n\tobserveElements(elements, clientId = null, isGutenberg = false) {\n\t\tif (!('IntersectionObserver' in window)) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction wrappedMutationCallback(mutationsList, observer) {\n\t\t\tthis._mutationCallback(mutationsList, observer, clientId);\n\t\t}\n\n\t\t// eslint-disable-next-line no-undef\n\t\tconst intersectionObserver = new IntersectionObserver(\n\t\t\tthis._handleIntersection.bind(this),\n\t\t\tthis.options\n\t\t);\n\n\t\t// eslint-disable-next-line no-undef\n\t\tconst mutationObserver = new MutationObserver(\n\t\t\twrappedMutationCallback.bind(this)\n\t\t);\n\n\t\t// eslint-disable-next-line no-undef\n\t\tconst classMutationObserver = new MutationObserver(\n\t\t\tthis._handleClassMutation.bind(this)\n\t\t);\n\n\t\telements.forEach((element) => {\n\t\t\tlet elementToWatch = element;\n\n\t\t\tif (element.classList.contains('nfd-wb-reveal-right')) {\n\t\t\t\telementToWatch = element.parentElement;\n\t\t\t}\n\n\t\t\tintersectionObserver.observe(elementToWatch);\n\n\t\t\tif (isGutenberg) {\n\t\t\t\tclassMutationObserver.observe(elementToWatch, {\n\t\t\t\t\tattributes: true,\n\t\t\t\t\tattributeFilter: ['class'],\n\t\t\t\t});\n\n\t\t\t\tmutationObserver.observe(elementToWatch, {\n\t\t\t\t\tattributes: true,\n\t\t\t\t\tattributeFilter: ['class'],\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Handle intersection events to trigger animations.\n\t *\n\t * @param {Array<IntersectionObserverEntry>} entries  - Intersection entries.\n\t * @param {IntersectionObserver}             observer - The observer instance.\n\t * @private\n\t */\n\t_handleIntersection(entries, observer) {\n\t\tentries.forEach((entry) => {\n\t\t\tif (entry.isIntersecting) {\n\t\t\t\tentry.target.classList.add(this.options.activeClass);\n\n\t\t\t\t// Sync with parent element\n\t\t\t\tentry.target\n\t\t\t\t\t.querySelectorAll('.nfd-wb-animate')\n\t\t\t\t\t.forEach((element) => {\n\t\t\t\t\t\telement.classList.add(this.options.activeClass);\n\t\t\t\t\t});\n\n\t\t\t\tobserver.unobserve(entry.target);\n\t\t\t}\n\t\t});\n\t}\n\n\t_handleClassMutation(entries) {\n\t\tentries.forEach((entry) => {\n\t\t\tif (entry?.type === 'attributes') {\n\t\t\t\tconst target = entry.target;\n\n\t\t\t\tif (!target.classList.contains('nfd-wb-animated-in')) {\n\t\t\t\t\ttarget.classList.add('nfd-wb-animated-in');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Callback function for the MutationObserver.\n\t *\n\t * @param {MutationRecord[]} entries  - List of mutations.\n\t * @param {MutationObserver} observer - The observer instance.\n\t * @param {string | null}    clientId - The block's client ID.\n\t */\n\t_mutationCallback(entries, observer, clientId = null) {\n\t\tentries.forEach((entry) => {\n\t\t\tif (entry?.type === 'attributes') {\n\t\t\t\tconst target = entry.target;\n\n\t\t\t\t// Try to add attribute to the element that is being changed (clientId)\n\t\t\t\tif (\n\t\t\t\t\tclientId &&\n\t\t\t\t\tclientId === target.getAttribute('data-block')\n\t\t\t\t) {\n\t\t\t\t\tif (target.getAttribute('data-replay-animation') === null) {\n\t\t\t\t\t\ttarget.setAttribute('data-replay-animation', true);\n\n\t\t\t\t\t\t// This actually resets the animation - CSS will take care of it.\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\ttarget.removeAttribute('data-replay-animation');\n\t\t\t\t\t\t}, 50);\n\t\t\t\t\t}\n\n\t\t\t\t\tobserver.disconnect();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n", "import { ViewportAnimationObserver } from './viewportAnimationObserver';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tviewportAnimation();\n});\n\n// listen for wonder-blocks/toolbar-button-added event\ndocument.addEventListener('wonder-blocks/toolbar-button-added', () => {\n\tviewportAnimation();\n});\n\n// listen for wonder-blocks/animation-changed event\ndocument.addEventListener('wonder-blocks/animation-changed', (event) => {\n\tconst clientId = event?.detail?.clientId;\n\tviewportAnimation(clientId);\n});\n\n/**\n * Handles viewport animations (entrance/exit).\n * @param {string | null} clientId - The block's client ID.\n */\nfunction viewportAnimation(clientId = null) {\n\tconst isGutenberg = document.body.classList.contains('block-editor-page');\n\n\tconst viewportAnimationObserver = new ViewportAnimationObserver({\n\t\troot: isGutenberg\n\t\t\t? document.querySelector('.interface-interface-skeleton__content') // Gutenberg scroll container\n\t\t\t: null,\n\t\tthreshold: 0.2, // at least 20% of the element is in the viewport\n\t});\n\n\t// Wait for React to add classes to the DOM\n\tsetTimeout(() => {\n\t\tconst elementsToAnimate = Array.from(\n\t\t\tdocument.getElementsByClassName('nfd-wb-animate')\n\t\t);\n\n\t\tviewportAnimationObserver.observeElements(\n\t\t\telementsToAnimate,\n\t\t\tclientId,\n\t\t\tisGutenberg\n\t\t);\n\t}, 10);\n}\n"],
  "mappings": "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",
  "names": []
}
